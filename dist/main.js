/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/main.js":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/***/ (() => {

eval("// Default array for projects and tasks\nconst toDoArray = [];\nconst arrayContainerForParentObject = [];\n\n// Button selections for adding, updating, and canceling to-dos and projects\nconst addToDoBtn = document.getElementById(\"addToDo\");\nconst updateToDoBtn = document.getElementById(\"updateToDo\");\nconst addProjectBtn = document.getElementById(\"addProject\");\nconst deleteProjectBtn = document.getElementById(\"deleteProject\");\nconst updateProjectBtn = document.getElementById(\"updateProject\");\nconst cancelProjectBtn = document.getElementById(\"cancelProject\");\nlet projectActiveObject = null;\nlet toDoActiveObject = null;\n\n// Access local storage\nfunction loadFromLocalStorage() {\n  const storedData = localStorage.getItem(\"projects\");\n  if (storedData) {\n    const storedProjects = JSON.parse(storedData);\n    console.log(storedProjects);\n\n    // Clear array before adding new data to prevent duplicates\n    arrayContainerForParentObject.length = 0;\n\n    // Push each stored project into arrayContainerForParentObject\n    storedProjects.forEach((project) => {\n      arrayContainerForParentObject.push(project);\n\n      // Display each project on the page\n      const projectInstance = new CreateProject();\n      projectInstance.displayParentObject(project);\n\n      // Will be used to re-render default project when it reloads\n      // If the project has items, render each to-do item\n      if (project.projectItems && project.projectItems.length > 0) {\n        project.projectItems.forEach((toDoItem) => {\n          const toDoInstance = new AssignToDoContent();\n          toDoInstance.displayToDoItem(toDoItem);\n        });\n      }\n    });\n  }\n}\n\n// Save to local storage\nfunction saveToLocalStorage() {\n  localStorage.setItem(\n    \"projects\",\n    JSON.stringify(arrayContainerForParentObject)\n  );\n}\n\n// Parent (CreateProject) class\nclass CreateProject {\n  constructor() {\n    this.projectName = document.getElementById(\"projectTitle\").value;\n    this.projectItems = [];\n  }\n\n  createParentObject() {\n    return {\n      projectName: this.projectName,\n      projectItems: this.projectItems,\n    };\n  }\n\n  pushParentObject() {\n    const projectExists = arrayContainerForParentObject.some(\n      (project) => project.projectName === this.projectName\n    );\n\n    if (!projectExists) {\n      const newProject = this.createParentObject();\n      arrayContainerForParentObject.push(newProject);\n      return newProject;\n    } else {\n      alert(\"Project name already exists. Choose a different name.\");\n      return null;\n    }\n  }\n\n  displayParentObject(projectItem) {\n    const projectList = document.getElementById(\"projectList\");\n\n    // Create the project item container\n    const projectItemContainer = document.createElement(\"div\");\n    projectItemContainer.classList.add(\"projectItemContainer\");\n\n    // Create the project title button\n    const projectTitleBtn = document.createElement(\"button\");\n    projectTitleBtn.classList.add(\"projectTitle\");\n    projectTitleBtn.textContent = projectItem.projectName;\n    projectTitleBtn.setAttribute(\"data-id\", projectItem.projectName);\n    projectTitleBtn.onclick = () =>\n      showToDosForProject(projectItem.projectName);\n\n    projectItemContainer.appendChild(projectTitleBtn);\n\n    // Create the edit button\n    const projectEditBtn = document.createElement(\"button\");\n    projectEditBtn.classList.add(\"projectEditButton\");\n    projectEditBtn.textContent = \"...\";\n    projectEditBtn.setAttribute(\"data-id\", projectItem.projectName);\n    projectEditBtn.onclick = () => {\n      editProject(projectItem.projectName);\n      openProjectDialogUponEdit();\n    };\n    projectEditBtn.id = `projectEditBtn`;\n    projectItemContainer.appendChild(projectEditBtn);\n\n    projectList.appendChild(projectItemContainer);\n  }\n}\n\n// Child (AssignToDoContent) class\nclass AssignToDoContent {\n  constructor() {\n    this.toDoTitle = document.getElementById(\"toDoTitle\").value;\n    this.toDoDescription = document.getElementById(\"toDoDescription\").value;\n    this.toDoDueDate = document.getElementById(\"toDoDueDate\").value;\n    this.toDoUrgency = document.getElementById(\"toDoUrgency\").value;\n    this.toDoImportance = document.getElementById(\"toDoImportance\").value;\n  }\n\n  static toDoIDCount = 0;\n\n  createToDoObj() {\n    return {\n      id: AssignToDoContent.toDoIDCount++,\n      title: this.toDoTitle,\n      description: this.toDoDescription,\n      dueDate: this.toDoDueDate,\n      urgency: this.toDoUrgency,\n      importance: this.toDoImportance,\n    };\n  }\n\n  pushToDoItem() {\n    const toDoItem = this.createToDoObj();\n    projectActiveObject.projectItems.push(toDoItem);\n    return toDoItem;\n  }\n\n  displayToDoItem(toDoItem) {\n    const toDoList = document.getElementById(\"toDoList\");\n\n    const toDoRow = document.createElement(\"tr\");\n    toDoRow.classList.add(\"toDoItem\");\n    toDoRow.setAttribute(\"data-id\", toDoItem.id);\n\n    const checkboxCell = document.createElement(\"td\");\n    const checkbox = document.createElement(\"input\");\n    checkbox.type = \"checkbox\";\n    checkboxCell.appendChild(checkbox);\n    toDoRow.appendChild(checkboxCell);\n\n    const urgencyCell = document.createElement(\"td\");\n    urgencyCell.classList.add(\"urgencyCell\");\n\n    if (toDoItem.importance === \"Important\" && toDoItem.urgency === \"Urgent\") {\n      const quadrant = document.createElement(\"div\");\n      quadrant.textContent = \"DO\";\n      quadrant.setAttribute(\"class\", \"do\");\n      urgencyCell.appendChild(quadrant);\n    }\n    if (\n      toDoItem.importance === \"Important\" &&\n      toDoItem.urgency === \"Not Urgent\"\n    ) {\n      const quadrant = document.createElement(\"div\");\n      quadrant.textContent = \"DECIDE\";\n      quadrant.setAttribute(\"class\", \"decide\");\n      urgencyCell.appendChild(quadrant);\n    }\n    if (\n      toDoItem.importance === \"Not Important\" &&\n      toDoItem.urgency === \"Urgent\"\n    ) {\n      const quadrant = document.createElement(\"div\");\n      quadrant.textContent = \"DELEGATE\";\n      quadrant.setAttribute(\"class\", \"delegate\");\n      urgencyCell.appendChild(quadrant);\n    }\n    if (\n      toDoItem.importance === \"Not Important\" &&\n      toDoItem.urgency === \"Not Urgent\"\n    ) {\n      const quadrant = document.createElement(\"div\");\n      quadrant.textContent = \"ELIMINATE\";\n      quadrant.setAttribute(\"class\", \"eliminate\");\n      urgencyCell.appendChild(quadrant);\n    }\n\n    const urgencyDiv = document.createElement(\"div\");\n    urgencyDiv.textContent = toDoItem.urgency;\n    urgencyCell.appendChild(urgencyDiv);\n\n    const importanceDiv = document.createElement(\"div\");\n    importanceDiv.textContent = toDoItem.importance;\n    urgencyCell.appendChild(importanceDiv);\n    toDoRow.appendChild(urgencyCell);\n\n    const detailsCell = document.createElement(\"td\");\n    const titleCell = document.createElement(\"div\");\n    titleCell.classList.add(\"titleCell\");\n    titleCell.textContent = toDoItem.title;\n    detailsCell.appendChild(titleCell);\n\n    const dueDateCell = document.createElement(\"div\");\n    dueDateCell.classList.add(\"dueDateCell\");\n    dueDateCell.textContent = toDoItem.dueDate;\n    detailsCell.appendChild(dueDateCell);\n\n    const descriptionCell = document.createElement(\"div\");\n    descriptionCell.classList.add(\"descriptionCell\");\n    descriptionCell.textContent = toDoItem.description;\n    detailsCell.appendChild(descriptionCell);\n\n    toDoRow.appendChild(detailsCell);\n\n    const actionsCell = document.createElement(\"td\");\n\n    const deleteButton = document.createElement(\"button\");\n    deleteButton.id = \"deleteToDo\";\n    deleteButton.setAttribute(\"data-id\", toDoItem.id);\n    deleteButton.onclick = () => deleteToDoItem(toDoItem.id, toDoRow);\n    actionsCell.appendChild(deleteButton);\n\n    const deleteIcon = document.createElement(\"img\");\n    deleteIcon.src = \"./assets/delete.png\";\n    deleteIcon.setAttribute(\"class\", \"icon\");\n    deleteButton.appendChild(deleteIcon);\n\n    const editButton = document.createElement(\"button\");\n    editButton.id = \"editToDo\";\n    editButton.setAttribute(\"data-id\", toDoItem.id);\n    editButton.onclick = () => {\n      editToDoItem(toDoItem.id);\n      openToDoDialogUponEdit();\n    };\n\n    const editIcon = document.createElement(\"img\");\n    editIcon.src = \"./assets/edit.png\";\n    editIcon.setAttribute(\"class\", \"icon\");\n    editButton.appendChild(editIcon);\n\n    actionsCell.appendChild(editButton);\n\n    toDoRow.appendChild(actionsCell);\n\n    toDoList.appendChild(toDoRow);\n  }\n}\n\n// Function to show to-dos for selected project\nfunction showToDosForProject(projectName) {\n  projectActiveObject = arrayContainerForParentObject.find(\n    (project) => project.projectName === projectName\n  );\n  const titleContainer = document.getElementById(\"titleContainer\");\n  titleContainer.textContent = projectActiveObject.projectName;\n\n  const toDoList = document.getElementById(\"toDoList\");\n  toDoList.innerHTML = \"\";\n\n  projectActiveObject.projectItems.forEach((toDoItem) => {\n    const toDoInstance = new AssignToDoContent();\n    toDoInstance.displayToDoItem(toDoItem);\n  });\n\n  openToDoDialog.style.display = \"inline\";\n}\n\n// Event listeners for add, update, and delete operations\naddToDoBtn.addEventListener(\"click\", () => {\n  if (validateToDoInputField()) {\n    const toDoInstance = new AssignToDoContent();\n    const toDoItem = toDoInstance.pushToDoItem();\n    toDoInstance.displayToDoItem(toDoItem);\n    emptyToDoInputField();\n    console.log(\"Updated array:\", projectActiveObject.projectItems);\n    console.log(\"New item added:\", toDoItem);\n  } else {\n    alert(\"Please fill in all the required fields.\");\n  }\n\n  toDoDialog.close();\n  saveToLocalStorage();\n});\n\nfunction validateToDoInputField() {\n  return (\n    document.getElementById(\"toDoTitle\").value !== \"\" &&\n    document.getElementById(\"toDoDescription\").value !== \"\" &&\n    document.getElementById(\"toDoDueDate\").value !== \"\" &&\n    document.getElementById(\"toDoUrgency\").value !== \"\" &&\n    document.getElementById(\"toDoImportance\").value !== \"\"\n  );\n}\n\nfunction emptyToDoInputField() {\n  document.getElementById(\"toDoTitle\").value = \"\";\n  document.getElementById(\"toDoDescription\").value = \"\";\n  document.getElementById(\"toDoDueDate\").value = \"\";\n  document.getElementById(\"toDoUrgency\").value = \"\";\n  document.getElementById(\"toDoImportance\").value = \"\";\n}\n\n// Delete a to-do item\nfunction deleteToDoItem(toDoItemID, toDoRow) {\n  const index = projectActiveObject.projectItems.findIndex(\n    (toDoItem) => toDoItem.id === toDoItemID\n  );\n  projectActiveObject.projectItems.splice(index, 1);\n  toDoRow.remove();\n\n  toDoDialog.close();\n  saveToLocalStorage();\n}\n\n// Edit a to-do item\nfunction editToDoItem(toDoItemID) {\n  toDoActiveObject = projectActiveObject.projectItems.find(\n    (toDoItem) => toDoItem.id === toDoItemID\n  );\n  document.getElementById(\"toDoTitle\").value = toDoActiveObject.title;\n  document.getElementById(\"toDoDescription\").value =\n    toDoActiveObject.description;\n  document.getElementById(\"toDoDueDate\").value = toDoActiveObject.dueDate;\n  document.getElementById(\"toDoUrgency\").value = toDoActiveObject.urgency;\n  document.getElementById(\"toDoImportance\").value = toDoActiveObject.importance;\n}\n\nupdateToDoBtn.addEventListener(\"click\", () => {\n  if (validateToDoInputField()) {\n    if (toDoActiveObject) {\n      toDoActiveObject.title = document.getElementById(\"toDoTitle\").value;\n      toDoActiveObject.description =\n        document.getElementById(\"toDoDescription\").value;\n      toDoActiveObject.dueDate = document.getElementById(\"toDoDueDate\").value;\n      toDoActiveObject.urgency = document.getElementById(\"toDoUrgency\").value;\n      toDoActiveObject.importance =\n        document.getElementById(\"toDoImportance\").value;\n      const updatedRow = document.querySelector(\n        `tr[data-id='${toDoActiveObject.id}']`\n      );\n      updatedRow.querySelector(\".titleCell\").textContent =\n        toDoActiveObject.title;\n      updatedRow.querySelector(\".dueDateCell\").textContent =\n        toDoActiveObject.dueDate;\n      updatedRow.querySelector(\".descriptionCell\").textContent =\n        toDoActiveObject.description;\n      updatedRow.querySelector(\".urgencyCell div:nth-child(1)\").textContent =\n        toDoActiveObject.urgency;\n      updatedRow.querySelector(\".urgencyCell div:nth-child(2)\").textContent =\n        toDoActiveObject.importance;\n\n      emptyToDoInputField();\n    }\n  } else {\n    alert(\"Please fill in all the required fields.\");\n  }\n\n  toDoDialog.close();\n  saveToLocalStorage();\n});\n\naddProjectBtn.addEventListener(\"click\", () => {\n  const newProject = new CreateProject();\n  const addedProject = newProject.pushParentObject();\n  if (addedProject) {\n    newProject.displayParentObject(addedProject);\n  }\n  projectDialog.close();\n  showToDosForProject(newProject.projectName);\n  saveToLocalStorage();\n});\n\nfunction editProject(projectID) {\n  projectActiveObject = arrayContainerForParentObject.find(\n    (project) => project.projectName === projectID\n  );\n  document.getElementById(\"projectTitle\").value =\n    projectActiveObject.projectName;\n}\n\nupdateProjectBtn.addEventListener(\"click\", () => {\n  if (projectActiveObject) {\n    const newTitle = document.getElementById(\"projectTitle\").value;\n    document.querySelector(\n      `button[data-id='${projectActiveObject.projectName}']`\n    ).textContent = newTitle;\n\n    //change id of the title button\n    const titleButton = document.querySelector(\n      `button.projectTitle[data-id='${projectActiveObject.projectName}']`\n    );\n    if (titleButton) {\n      titleButton.setAttribute(\"data-id\", newTitle);\n    } else {\n      console.error(\"Title button not found.\");\n    }\n\n    //change id of attached edit button\n    const editButton = document.querySelector(\n      `button.projectEditButton[data-id='${projectActiveObject.projectName}']`\n    );\n    if (editButton) {\n      editButton.setAttribute(\"data-id\", newTitle);\n    } else {\n      console.error(\"Edit button not found.\");\n    }\n\n    // change value of the projectName object\n    projectActiveObject.projectName = newTitle;\n\n    //empty input field for title\n    document.getElementById(\"projectTitle\").value = null;\n  }\n\n  projectDialog.close();\n  saveToLocalStorage();\n});\n\ndeleteProjectBtn.addEventListener(\"click\", () => {\n  if (projectActiveObject) {\n    const index = arrayContainerForParentObject.indexOf(projectActiveObject);\n    arrayContainerForParentObject.splice(index, 1);\n    document\n      .querySelector(\n        `#projectList button[data-id='${projectActiveObject.projectName}']`\n      )\n      .parentElement.remove();\n    projectActiveObject = null;\n  }\n\n  const toDoList = document.getElementById(\"toDoList\");\n  toDoList.innerHTML = \"\";\n\n  projectDialog.close();\n  saveToLocalStorage();\n});\n\n// UI UX\nconst toDoDialog = document.getElementById(\"toDoDialog\");\nconst projectDialog = document.getElementById(\"projectDialog\");\nconst openToDoDialog = document.getElementById(\"openToDoDialog\");\nconst openProjectDialog = document.getElementById(\"openProjectDialog\");\nconst projectEditBtn = document.getElementById(\"projectEditBtn\");\nconst cancelToDoBtn = document.getElementById(\"cancelToDo\");\n\nopenProjectDialog.addEventListener(\"click\", () => {\n  projectDialog.showModal();\n  document.getElementById(\"titleContainer\").textContent = \"\"; // reset text input\n  addProjectBtn.style.display = \"block\";\n  deleteProjectBtn.style.display = \"none\";\n  updateProjectBtn.style.display = \"none\";\n});\n\ncancelProjectBtn.addEventListener(\"click\", () => {\n  projectDialog.close();\n});\n\nfunction openProjectDialogUponEdit() {\n  projectDialog.showModal();\n  deleteProjectBtn.style.display = \"block\";\n  updateProjectBtn.style.display = \"block\";\n  addProjectBtn.style.display = \"none\";\n}\n\nopenToDoDialog.addEventListener(\"click\", () => {\n  toDoDialog.showModal();\n  updateToDoBtn.style.display = \"none\";\n  addToDoBtn.style.display = \"block\";\n});\n\ncancelToDoBtn.addEventListener(\"click\", () => {\n  emptyToDoInputField();\n  toDoDialog.close();\n});\n\nfunction openToDoDialogUponEdit() {\n  toDoDialog.showModal();\n  addToDoBtn.style.display = \"none\";\n  updateToDoBtn.style.display = \"inline-block\";\n}\n\n// for the sort create a new key:value inside the object that follows a condition\n// use the value for that key value pair to create a sort function\n// use an event listener\n// how do you then remove the effects of the sort when you leave the page?\n\nconst allToDoBtn = document.getElementById(\"allToDo\");\nallToDoBtn.addEventListener(\"click\", () => showAllToDos());\n\nfunction showAllToDos() {\n  const toDoList = document.getElementById(\"toDoList\");\n  toDoList.innerHTML = \"\"; // Clear existing list to avoid duplicates\n\n  arrayContainerForParentObject.forEach((project) => {\n    project.projectItems.forEach((toDoItem) => {\n      const toDoInstance = new AssignToDoContent();\n      toDoInstance.displayToDoItem(toDoItem); // Display each to-do item\n    });\n  });\n\n  // Optionally update title to show this is the \"All To-Dos\" view\n  const titleContainer = document.getElementById(\"titleContainer\");\n  titleContainer.textContent = \"All To-Do Items\";\n\n  openToDoDialog.style.display = \"none\";\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  showAllToDos(); // Automatically display all to-do items when the DOM is fully loaded\n});\n\nconst sampleProjects = [\n  {\n    projectName: \"Chores\",\n    projectItems: [\n      {\n        id: 0,\n        title: \"Magsalang ng labahan\",\n        description: \"Wag kalimutan isampay kagad\",\n        dueDate: \"2024-11-15\",\n        urgency: \"Urgent\",\n        importance: \"Important\",\n      },\n      {\n        id: 1,\n        title: \"Ilabas basura\",\n        description: \"Wag mong iiwan ng walang plastic yung basurahan\",\n        dueDate: \"2024-11-20\",\n        urgency: \"Urgent\",\n        importance: \"Not Important\",\n      },\n    ],\n  },\n  {\n    projectName: \"Others XD\",\n    projectItems: [\n      {\n        id: 0,\n        title: \"Gumawa ng tinapay\",\n        description: \"Wag kang tamad :/\",\n        dueDate: \"2024-12-01\",\n        urgency: \"Not Urgent\",\n        importance: \"Important\",\n      },\n      {\n        id: 1,\n        title: \"Manood ng bagong series\",\n        description: \"what if lang naman!\",\n        dueDate: \"2024-12-01\",\n        urgency: \"Not Urgent\",\n        importance: \"Not Important\",\n      },\n    ],\n  },\n];\n\n// Example of adding it to localStorage\nlocalStorage.setItem(\"projects\", JSON.stringify(sampleProjects));\n\nloadFromLocalStorage();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/main.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/main.js"]();
/******/ 	
/******/ })()
;